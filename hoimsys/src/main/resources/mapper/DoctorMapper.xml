<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hoimsys.dao.DoctorMapper">
  <resultMap id="BaseResultMap" type="hoimsys.po.Doctor">
    <id column="d_id" jdbcType="INTEGER" property="dId" />
    <result column="dt_id" jdbcType="INTEGER" property="dtId" />
    <result column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="d_name" jdbcType="VARCHAR" property="dName" />
    <result column="d_sex" jdbcType="VARCHAR" property="dSex" />
    <result column="d_mobile" jdbcType="VARCHAR" property="dMobile" />
    <result column="d_password" jdbcType="VARCHAR" property="dPassword" />
    <result column="d_limits_number" jdbcType="INTEGER" property="dLimitsNumber" />
    <result column="d_img" jdbcType="VARCHAR" property="dImg" />
    <result column="d_info" jdbcType="VARCHAR" property="dInfo" />
  </resultMap>
  
  <resultMap id="DtDoctorResultMap" type="hoimsys.bo.DtDoctor">
    <id column="d_id" jdbcType="INTEGER" property="dId" />
    <result column="dt_id" jdbcType="INTEGER" property="dtId" />
    <result column="t_id" jdbcType="INTEGER" property="tId" />
    <result column="d_name" jdbcType="VARCHAR" property="dName" />
    <result column="d_sex" jdbcType="VARCHAR" property="dSex" />
    <result column="d_mobile" jdbcType="VARCHAR" property="dMobile" />
    <result column="d_password" jdbcType="VARCHAR" property="dPassword" />
    <result column="d_limits_number" jdbcType="INTEGER" property="dLimitsNumber" />
    <result column="d_img" jdbcType="VARCHAR" property="dImg" />
    <result column="d_info" jdbcType="VARCHAR" property="dInfo" />
    <association property="title" javaType="Title">
    	 <id column="tid2" jdbcType="INTEGER" property="tId" />
	    <result column="t_name" jdbcType="VARCHAR" property="tName" />
	    <result column="t_fee" jdbcType="DECIMAL" property="tFee" />
	    <result column="t_remark" jdbcType="VARCHAR" property="tRemark" />
    </association>
    <association property="department" javaType="Department">
    	<id column="dtid2" jdbcType="INTEGER" property="dtId" />
	    <result column="dt_name" jdbcType="VARCHAR" property="dtName" />
	    <result column="dt_mobile" jdbcType="VARCHAR" property="dtMobile" />
	    <result column="dt_room_number" jdbcType="VARCHAR" property="dtRoomNumber" />
	    <result column="dt_info" jdbcType="VARCHAR" property="dtInfo" />
	    <result column="dt_img" jdbcType="VARCHAR" property="dtImg" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    d_id, dt_id, t_id, d_name, d_sex, d_mobile, d_limits_number, d_img, d_info
  </sql>
  
  <sql id="DtDoctor_Column_List">
    d.d_id, d.dt_id, d.t_id, d.d_name, d_sex, d.d_mobile, d.d_limits_number, d.d_img, d.d_info,
			  	t.t_id as tid2, t.t_name, t.t_fee, t.t_remark,
			  	dt.dt_id as dtid2, dt.dt_name, dt.dt_mobile, dt.dt_room_number, dt.dt_info, dt.dt_img
  </sql>
  
  <!-- 根据医生手机号获取医生信息 -->
  <select id="selectDoctorBydMobile" parameterType="String" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from doctor
    where d_mobile = #{d_mobile}
  </select>
  
  <!-- 医生登录 -->
  <select id="selectDtDoctorByMobileAndPwdAndLimit" resultMap="DtDoctorResultMap">
  	select 
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id 
  	where d.d_mobile = #{dMobile} and d.d_password = #{dPassword} and d.d_limits_number = #{dLimitsNumber}
  </select>
  
  <!-- 根据医生ID查询医生详情信息 -->
  <select id="selectBydId" parameterType="Integer" resultMap="DtDoctorResultMap">
  	select 
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id 
  	where d.d_id = #{dId}
  </select>
  
  <!-- 根据部门id查询医生 -->
  <select id="selectBydtId" parameterType="Integer" resultMap="DtDoctorResultMap">
  	select 
  	<!-- <include refid="Base_Column_List" /> -->
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id 
  	where dt_id = #{dtId}
  </select>
  
  <!-- 所有科室医生 -->
    <select id="selectByLikeNameAndLimit1" parameterType="String" resultMap="DtDoctorResultMap">
	  	<bind name="likeName" value="'%' + dName + '%'" />
	  	select 	
	  	<include refid="DtDoctor_Column_List" />
	  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id
		where d_name like #{likeName} and d_limits_number=1
	</select>  
  
<!--   <select id="selectByLikeNameAndLimit1" parameterType="String" resultMap="BaseResultMap">
  	<bind name="likeName" value="'%' + dName + '%'" />
  	select 
  	<include refid="Base_Column_List" />
  	from doctor 
  	where d_name like #{likeName} and d_limits_number=1
  </select>   -->
  
  <select id="selectAllDoctor" resultMap="DtDoctorResultMap">
  	select 
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id
  </select>
  
  <select id="selectRegDtdoctorList" resultMap="DtDoctorResultMap">
  	<bind name="pattern" value="'%' + nameOrId + '%'" />
  	select 
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id
  	where d.d_limits_number &lt;0 and (d.d_name like #{pattern} or d.d_id like #{pattern})
  </select>
  
  <select id="selectDtdoctorList" resultMap="DtDoctorResultMap">
  	<bind name="pattern" value="'%' + nameOrId + '%'" />
  	select 
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id
  	where d.d_limits_number &gt;0 and (d.d_name like #{pattern} or d.d_id like #{pattern})
  			and d.d_limits_number != 99
  </select>
  
  <select id="selectAllDtdoctorList" resultMap="DtDoctorResultMap">
  	<bind name="pattern" value="'%' + nameOrId + '%'" />
  	select 
  	<include refid="DtDoctor_Column_List" />
  	from doctor d LEFT JOIN title t on d.t_id = t.t_id LEFT JOIN department dt on d.dt_id = dt.dt_id
  	where d.d_limits_number &gt;0 and (d.d_name like #{pattern} or d.d_id like #{pattern})
  			and d.d_limits_number != 99
  </select>
  
  <!-- MBG生成 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where d_id = #{dId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from doctor
    where d_id = #{dId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="hoimsys.po.Doctor">
    insert into doctor (d_id, dt_id, t_id, 
      d_name, d_sex, d_mobile, 
      d_password, d_limits_number, d_img, 
      d_info)
    values (#{dId,jdbcType=INTEGER}, #{dtId,jdbcType=INTEGER}, #{tId,jdbcType=INTEGER}, 
      #{dName,jdbcType=VARCHAR}, #{dSex,jdbcType=VARCHAR}, #{dMobile,jdbcType=VARCHAR}, 
      #{dPassword,jdbcType=VARCHAR}, #{dLimitsNumber,jdbcType=INTEGER}, #{dImg,jdbcType=VARCHAR}, 
      #{dInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="hoimsys.po.Doctor">
    insert into doctor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dId != null">
        d_id,
      </if>
      <if test="dtId != null">
        dt_id,
      </if>
      <if test="tId != null">
        t_id,
      </if>
      <if test="dName != null">
        d_name,
      </if>
      <if test="dSex != null">
        d_sex,
      </if>
      <if test="dMobile != null">
        d_mobile,
      </if>
      <if test="dPassword != null">
        d_password,
      </if>
      <if test="dLimitsNumber != null">
        d_limits_number,
      </if>
      <if test="dImg != null">
        d_img,
      </if>
      <if test="dInfo != null">
        d_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dId != null">
        #{dId,jdbcType=INTEGER},
      </if>
      <if test="dtId != null">
        #{dtId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        #{tId,jdbcType=INTEGER},
      </if>
      <if test="dName != null">
        #{dName,jdbcType=VARCHAR},
      </if>
      <if test="dSex != null">
        #{dSex,jdbcType=VARCHAR},
      </if>
      <if test="dMobile != null">
        #{dMobile,jdbcType=VARCHAR},
      </if>
      <if test="dPassword != null">
        #{dPassword,jdbcType=VARCHAR},
      </if>
      <if test="dLimitsNumber != null">
        #{dLimitsNumber,jdbcType=INTEGER},
      </if>
      <if test="dImg != null">
        #{dImg,jdbcType=VARCHAR},
      </if>
      <if test="dInfo != null">
        #{dInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hoimsys.po.Doctor">
    update doctor
    <set>
      <if test="dtId != null">
        dt_id = #{dtId,jdbcType=INTEGER},
      </if>
      <if test="tId != null">
        t_id = #{tId,jdbcType=INTEGER},
      </if>
      <if test="dName != null">
        d_name = #{dName,jdbcType=VARCHAR},
      </if>
      <if test="dSex != null">
        d_sex = #{dSex,jdbcType=VARCHAR},
      </if>
      <if test="dMobile != null">
        d_mobile = #{dMobile,jdbcType=VARCHAR},
      </if>
      <if test="dPassword != null">
        d_password = #{dPassword,jdbcType=VARCHAR},
      </if>
      <if test="dLimitsNumber != null">
        d_limits_number = #{dLimitsNumber,jdbcType=INTEGER},
      </if>
      <if test="dImg != null">
        d_img = #{dImg,jdbcType=VARCHAR},
      </if>
      <if test="dInfo != null">
        d_info = #{dInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where d_id = #{dId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hoimsys.po.Doctor">
    update doctor
    set dt_id = #{dtId,jdbcType=INTEGER},
      t_id = #{tId,jdbcType=INTEGER},
      d_name = #{dName,jdbcType=VARCHAR},
      d_sex = #{dSex,jdbcType=VARCHAR},
      d_mobile = #{dMobile,jdbcType=VARCHAR},
      d_password = #{dPassword,jdbcType=VARCHAR},
      d_limits_number = #{dLimitsNumber,jdbcType=INTEGER},
      d_img = #{dImg,jdbcType=VARCHAR},
      d_info = #{dInfo,jdbcType=VARCHAR}
    where d_id = #{dId,jdbcType=INTEGER}
  </update>
</mapper>